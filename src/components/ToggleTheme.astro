---
import { Icon } from 'astro-icon/components';

// https://jklakus.co.uk/blogs/astro-darktheme
---

<div class="inline-flex items-center">
	<label
		class="flex h-8 w-8 cursor-pointer items-center justify-center rounded-full bg-slate-100 text-fore-primary hover:bg-slate-200 dark:bg-slate-700 dark:hover:bg-slate-600/80"
		for="light-switch"
	>
		<button id="light-switch">
			<span class="sr-only">Switch to light / dark version</span>
			<Icon class="h-4 w-4 dark:hidden" name="line-md:sunny-loop" />
			<Icon class="hidden h-4 w-4 dark:block" name="line-md:moon-loop" />
		</button>
	</label>
</div>

<script>
	const setToggleListener = () => {
		let toggleBtn = document.getElementById('light-switch');
		const handleToggleClick = () => {
			const element = document.documentElement;
			element.classList.toggle('dark');

			const isDark = element.classList.contains('dark');
			localStorage.setItem('theme', isDark ? 'dark' : 'light');
			element.style.colorScheme = isDark ? 'dark' : 'light';
		};

		toggleBtn?.addEventListener('click', handleToggleClick);
	};

	setToggleListener();

	document.addEventListener('astro:after-swap', setToggleListener);
</script>

<script>
	const setTheme = () => {
		const theme = (() => {
			if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
				return localStorage.getItem('theme');
			}
			if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
				return 'dark';
			}
			return 'light';
		})();

		if (theme === 'light') {
			document.documentElement.classList.remove('dark');
		} else {
			document.documentElement.classList.add('dark');
		}

		document.documentElement.style.colorScheme = theme || 'light';
		window.localStorage.setItem('theme', theme || 'light');
	};

	setTheme();

	document.addEventListener('astro:after-swap', setTheme);
</script>
