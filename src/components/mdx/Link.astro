---
import type { HTMLAttributes } from 'astro/types';
import { classNames } from '@lib/classNames';

interface Props extends HTMLAttributes<'a'> {}

const html = await Astro.slots.render('default');

const { class: className, ...props } = Astro.props;

const extraClasses: string[] = ['no-underline'];

// If the text content of the link starts and ends with the quotes,
// or other symbols that look better without an underline,
// wrap the the symbols with `.nou` to enable a better link display.
const modifiedHTML = html?.replace(/^([“‘\(]?)(.+?)([”’\)]?)$/, (m, p1, p2, p3) => {
	if (!p1 && !p3) {
		return m;
	}
	if (p1) {
		extraClasses.push('has-left-overhang');
	}
	if (p3) {
		extraClasses.push('has-right-overhang');
	}
	return `<span class="nou"><span>${p1}</span></span>${p2}<span class="nou"><span>${p3}</span></span>`;
});
---

<a {...props} class={classNames(className, extraClasses)} set:html={modifiedHTML} />
